/*region atomic*/
.atomicFrame {
  stroke-width: 1px;
  stroke: rgb(240, 240, 240);
  fill: none;
  pointer-events: visible;
}

.atomic.anno.compressed {
  shape-rendering: geometricPrecision;
  fill: rgba(0, 0, 0, 0.3);
  stroke-linejoin: round;
}

.atomic.anno.uncompressed {
  fill: none;
}

.atomic.chunk.supercompressed {
  shape-rendering: geometricPrecision;
  stroke-linecap: round;
  stroke-width: 3px;
  stroke: black;
}

.atomic.type {
  shape-rendering: geometricPrecision;
  stroke-linejoin: round;
}

.atomic.bgToken,
.atomic.tokenPolygon,
.atomic.tokenTextBg {
  stroke-width: 1px;
  stroke: rgb(240, 240, 240);
}

.atomic.bgToken_g {
  shape-rendering: geometricPrecision;
}

/*HM*/
/*.atomic.bgToken_g.noAnno:hover {*/
/*fill: yellow;*/
/*}*/

/*.atomic.bgToken_g.anno:hover {*/
/*fill: goldenrod;*/
/*}*/
/*HM*/

.atomic.tokenText {
  text-anchor: start;
  dominant-baseline: central;
  font-family: sans-serif;
  /*stroke-width: 1px;*/
  /*stroke: lightgrey;*/
}

.atomic.tokenText.anno {
  fill: white;
}

.atomic.tokenText.noAnno {
  fill: black;
}

/*endregion*/

/*region semiaggregated*/
.semiAggregated.anno.compressed {
  fill: rgba(0, 0, 0, 0.3);
  stroke-linejoin: miter;
}

.semiAggregated.chunk.supercompressed {
  shape-rendering: geometricPrecision;
  stroke-linecap: butt;
  stroke-width: 2px;
  stroke: black;
}

/*endregion*/

/*region aggregated*/
.aggregated.anno.compressed {
  fill: rgb(0, 0, 0);
  stroke: none;
}

.aggregated.pseudoChunk.supercompressed {
  fill: black;
}

/*endregion*/

/*region multiple tokenModeClasses*/
.anno.compressed {
  stroke-width: 1px;
  stroke: black;
}

.globalTermFrame {
  stroke-width: 1px;
  stroke: black;
  fill: none;
}

.termText {
  text-anchor: start;
  dominant-baseline: central;
  font-family: sans-serif;
  /*font-style: oblique;*/
  /*font-weight: bold;*/
  /*font-weight: bold;*/

  /*fill: darkred;*/
}

.textIndicator_g {
  stroke-width: 1px;
  stroke: black;
  display: none;
}

.activeTermRect {
  display: none;
  stroke-width: 1px;
  stroke: goldenrod;
  fill: goldenrod;
}

.listenerRect {
  pointer-events: all;
  fill: none;
}

/*double to make sure this beats the simple class*/
.activeTerm.activeTerm {
  display: block;
}

.tokenAnnoType,
.binAnnoType {
  stroke-width: 1px;
}

/*endregion*/

/*region NZE*/
.annotator-controls {
  white-space: normal;
}

/*endregion*/

/*region detail*/

/*region detail*/
#detailBg_r,
.splitWindowBackground,
.userLayerBG_stroke {
  fill: white;
}

#detailBg_r {
  fill: white;
}

.userLayerBG {
  fill: white;
}

.userLayerBG_stroke {
  stroke: black;
  stroke-width: 0.5px;
  fill: none;
}

.chunkAnno {
  stroke-width: 1px;
  stroke: black;
}

/*HM*/
/*Ignore anno type hover */
.tokenAnnoType {
  pointer-events: none;
}

/*HM*/
/*Ignore bin type hover */
.binAnnoType {
  pointer-events: none;
}

/*endregion*/

.dragButtonOutline {
  stroke-width: 1px;
  stroke: black;
  shape-rendering: geometricPrecision;
}

.dragButtonText {
  text-anchor: middle;
  dominant-baseline: central;
  font-family: sans-serif;
  font-size: 12px;
}

.dragButtonConnector {
  stroke-width: 5px;
  stroke: black;
}

.overviewBg_r {
  fill: white;
}

/*region lens*/
#dragBackground {
  fill: white;
}

#dragBackground {
  fill: white;
}

#dragBackground {
  fill: white;
}

.typeRectAggregated {
  stroke-width: 1px;
  /*stroke: black;*/
}

#lensBackground {
  fill: white;
  /*stroke: black;*/
  /*stroke-width: 0.5px;*/
}

#lensFrame {
  fill: none;
  stroke: black;
  stroke-width: 0.5px;
}

/*endregion*/

/*region overview*/
.stroke {
  stroke: black;
  stroke-width: 0.5px;
  /*fill: none;*/
}

/*endregion*/

/*region general*/

body {
  background-color: palegoldenrod;
  overflow: auto;
  display: grid;
  gap: 20px;
  margin: 20px;
  /*grid-template-columns: minmax(100px, 500px) max-content 500px;*/
  grid-template-columns: 700px max-content max-content max-content;
  grid-template-rows: 750px 200px;
  grid-template-areas: "textWindow buttons overviewStrips annoWindow";
}

#annoWindow_s {
  shape-rendering: crispEdges;
  grid-area: annoWindow;
}

#overviewStrips_s {
  shape-rendering: crispEdges;
  grid-area: overviewStrips;
}

/*
*------------------------------------------
*JENA: Textview and Container related stuff
*------------------------------------------
*/
#pContainer {
  /**landscape mode exclusive*/
  /*
width: 1450px;
float: left; 
margin-top: 20px;
margin-left: 40px;
*/

  /**portrait mode exclusive*/
  /*width: calc(100vw - 900px); !**800 px = tool canvas tokenExt + some magic pixel*!*/
  /*min-width: 100px;*/
  /*position: absolute;*/
  /*top: 0;*/
  /*padding: 5px;*/
  /*margin-top: 40px; !**formerly 40px - equals margin-right of tool in drawchart.js*!*/
  /*margin-left: 5px;*/
  /* line-height: 0; */

  /**same for both modes*/
  /* height: calc(100vh - 650px); */
  /*height: 92vh; !** formerly brute-forced 850px*!*/
  /* min-height: 850px; */
  overflow: hidden;
}

.textArea {
  grid-area: textWindow;
  height: 750px;
  display: grid;
  grid-template-rows: 100%;
  row-gap: 5px;
  /* height: 100%;
  width: 100%; */
}

/**css for all text views**/
.splitView {
  /**landscape mode exclusive*/
  /*
    width: 1450px;
    float: left; 
    margin-top: 20px;
    margin-left: 40px;
    height: calc(100vh - 650px);
    */

  /**portrait mode exclusive*/
  /*height: 100%;*/
  /*width: 80%; !**700 px = tool canvas tokenExt + some magic pixel*!*/
  /*float: left;*/
  /*margin-left: 10px;*/
  /*padding: 5px;*/
  /* display: inline-block; */

  /**same for both modes*/
  /* grid-area: textWindow; */
  overflow: auto;
  background: white;
  background-color: white;
  /* box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22); */
}

/* #textDivView {
  grid-area: textDivView;
  grid-column-start: 1;
  grid-column-end: row1-end;
  grid-row-start: 1;
  grid-row-end: 2;
}

#view1 {
  grid-area: view1;
  grid-column-start: 1;
  grid-column-end: row2-end;
  grid-row-start: 2;
  grid-row-end: 3;
} */

.upperview {
  box-shadow: 0 0 28px rgba(0, 0, 0, 0.25), 0 0 10px rgba(0, 0, 0, 0.22);
}

#buttonsTBD {
  grid-area: buttons;
  /*height: 99%;*/
  /*width: 30%;*/
  /*margin-left: 20px;*/
  /*position: absolute;*/
  /*display: inline-block;*/
}

.buttonRects {
  /* stroke: black;
  stroke-width: 1; */
}

#buttonContainer {
  position: absolute;
  width: 15%;
  height: 850px;
  display: inline-block;
  margin-left: -3px;
  top: 35px;
}

.partitionIndicator,
.splitIndicator,
.buttonPartitionIndicator {
  /* stroke: red;
  opacity: 0.5; */
  opacity: 0.5;
}

/*
*-------------------------------
*JENA: Brush/Slider related stuff
*-------------------------------
*/
#brushG {
  border-color: blue;
}

.selection {
  fill-opacity: 0.3;
  stroke-width: 2px;
  stroke: black;
  /* stroke: red;
  fill: gray; */
}

.O0 > .selection {
  fill: darkgray;
  stroke: black;
}

.O1 > .selection {
  fill: red;
  stroke: red;
}

.O2 > .selection {
  fill: green;
  stroke: green;
}

.O3 > .selection {
  fill: rgb(250, 110, 50);
  stroke: orange;
}

.slider {
  fill: #010101;
  /*stroke: #454545;*/
  /*stroke-width: 3px;*/
  cursor: pointer;
}

#slider1 > #slider {
  border-radius: 25px;
}
#slider1 > #slider:active {
  fill: #c6c5f0;
}

/*HM*/
#filtersDiv {
  margin-left: 40px;
  margin-top: 10px;
  width: 1450px;
  height: 20px;
  background: #f5f5f5;
  float: left;
}
/*HM*/

/*input[type=checkbox]*/
/*{*/
/*!* Double-sized Checkboxes *!*/
/*-ms-transform: scale(2); !* IE *!*/
/*-moz-transform: scale(2); !* FF *!*/
/*-webkit-transform: scale(2); !* Safari and Chrome *!*/
/*-o-transform: scale(2); !* Opera *!*/
/*padding: 10px;*/
/*}*/

/*HM*/
.underline {
  border-bottom: 2px solid black;
}

/*HM*/
.underlineActive {
  border-top: solid;
}

/*HM*/
.firstActiveChunk {
  border-left: solid;
}

/*HM*/
.lastActiveChunk {
  border-right: solid;
}

/*HM*/
div span {
  line-height: 25px;
  /* box-sizing: content-box; */
  /*border-bottom:  2px solid transparent;;*/
  /* background-clip: border-box; */
  /* display: block; */
  /* float: left; */
}

/*HM*/
/*active not annotated text token*/
.activeTextToken {
  background: yellow !important;
}

/*HM*/
/*active annotated text token*/
.activeAnnotatedTextToken {
  background: goldenrod !important;
}

/*HM*/
#container {
  width: 100%;
  position: relative;
  /* position: relative; CHANGED*/
}

/*HM*/
/*#annoWindow_s {*/
/*  width: 100%; !*THIS IS BREAKING THE LAYOUT WHEN RESIZED*!*/
/*  !*height: 100%; //may be needed for seperator *!*/
/*}*/

/*HM*/
.activeNoAnnoChartToken {
  fill: yellow !important;
}

/*HM*/
.activeAnnoChartToken {
  fill: goldenrod !important;
}

/*HM*/
.activeAnnoChartBin {
  fill: goldenrod !important;
}

.indicatorArrow {
  fill: black;
  stroke: black;
}

/*HM*/
/*temporal solution*/
.noAnnoSemiAggregated_t_b {
  pointer-events: none;
  fill: yellow;
  stroke: none;
}
/*HM*/
.noAnnoBgToken {
  pointer-events: none;
  fill: yellow;
  stroke: none;
}
/*HM*/
.noAnnoBgBin {
  pointer-events: none;
  fill: yellow;
  stroke: none;
}

/*HM*/
.transparent {
  fill-opacity: 0;
  stroke: transparent !important;
}

.ui-helper {
  width: 15px !important;
  height: 40px !important;
  visibility: visible;
}

.selector-div,
.loader-div {
  position: absolute;
  width: 800px;
  height: 25px;
  background-color: white;
  border: 1px solid lightgray;
  padding: 5px;
  transition: 0.3s;
  display: grid;
  grid-template-rows: 100%;
  overflow: hidden;
}

.selector-div.active,
.loader-div.active {
  grid-template-rows: 25px auto;
  max-height: 400px;
}

.selector-div {
  width: 200px;
}

.title-div {
  text-align: center;
  color: black;
  font-size: 16px;
  cursor: pointer;
  height: 25px;
}

.selector-wrapper,
.data-wrapper {
  display: grid;
  overflow-y: auto;
}

.selector-wrapper::-webkit-scrollbar,
.data-wrapper::-webkit-scrollbar {
  display: none; /* Chrome Safari */
}

.data-selector {
  background-color: white;
  height: 25px;
  font-size: 12px;
  text-align: center;
  border-top: 1px solid lightgray;
  padding-top: 1px;
}

.data-selector.active {
  background-color: lightblue;
}

.data-selector:hover {
  background-color: gray;
}

.load-animation-div {
  position: absolute;
  border: 16px solid #f3f3f3; /* Light grey */
  border-top: 16px solid #3498db; /* Blue */
  border-radius: 50%;
  width: 120px;
  height: 120px;
  animation: spin 2s linear infinite;
}

@-webkit-keyframes spin {
  0% {
    -webkit-transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
  }
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* .splitWindowBackground.active-node {
  stroke: darkred;
  stroke-width: 2px;
}

.splitWindowBackground.active-sibling {
  stroke: red;
  stroke-width: 2px;
} */

.splitView.active-node {
  border: 4px solid darkred;
}

.splitView.active-sibling {
  border: 4px solid red;
}

rect.active-node,
.active-node > .selection {
  fill: darkred;
}

rect.active-sibling,
.active-sibling > .selection {
  fill: red;
}

rect.active-relative,
.active-relative > .selection {
  fill: orange;
}

rect.active-predec,
.active-predec > .selection {
  fill: yellow;
}

#button_root {
  fill: rgba(0, 0, 0, 0.767);
}

rect[id^="button_root_"],
circle[id^="button_split_root_"] {
  fill: lightgray;
}

.buttonTreeElement {
}
